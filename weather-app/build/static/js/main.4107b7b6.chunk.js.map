{"version":3,"sources":["Components/Error Modal/index.js","Hooks/useModal.js","config/index.js","utils/index.js","Components/Map/index.js","App.js","index.js"],"names":["ErrorModal","modal","centered","hidemodal","message","centeredmodal","undefined","Modal","show","onHide","severity","useModal","useState","showmodal","modalmessage","setmodalmessage","axiosinstance","axios","create","baseURL","convertkelvintocelcius","temp","parseFloat","toFixed","properformattedtime","time","formattedtime","split","amapm","hours","length","minutes","seconds","DisplayMap","map","coordinates","useEffect","getCenter","lat","lng","Latitude","Longtitude","newmapLatLng","L","LatLng","flyTo","getZoom","WeatherMap","weatherdata","saveweatherdata","setMap","showmodalwithmessage","markerref","useRef","tooltipref","props","modalprops","current","_container","style","backgroundColor","border","displaymap","useMemo","Object","keys","MapContainer","center","height","zoom","scrollWheelZoom","whenCreated","TileLayer","attribution","url","Marker","ref","position","Tooltip","offset","direction","opacity","permanent","Alert","className","variant","name","src","icon","alt","description","temperature","minimum_temperature","maximum_temperature","sunrisetime","sunsettime","speed","humidity","onClick","navigator","permissions","query","then","state","catch","locate","on","e","latlng","post","data","weather","wind","main","temp_min","temp_max","setLatLng","error","App","weatherlocation","changeweatherlocation","changecoordinates","MakeApiRequest","useCallback","currentweatherlocation","coord","lon","findweatherforalocation","trim","mapprops","TextField","size","value","onKeyPress","key","onChange","target","InputProps","endAdornment","InputAdornment","IconButton","rel","href","color","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4107b7b6.chunk.js","sourcesContent":["import { Modal } from 'react-bootstrap';\r\nimport Alert from '@mui/material/Alert';\r\nexport const ErrorModal = ({ modal, centered, hidemodal, message }) => {\r\n    const centeredmodal = centered === undefined ? true : false\r\n    return (\r\n        <Modal\r\n            show={modal}\r\n            centered={centeredmodal}\r\n            onHide={hidemodal}\r\n        >\r\n            <Alert severity=\"error\">\r\n                <strong>{message}</strong>\r\n            </Alert>\r\n        </Modal>\r\n    )\r\n}","import { useState } from \"react\";\r\n\r\nexport const useModal = () => {\r\n    const [modal, showmodal] = useState(false)\r\n    const [modalmessage, setmodalmessage] = useState(\"\")\r\n    const hidemodal = () => {\r\n        showmodal(false)\r\n    }\r\n    const showmodalwithmessage = (message) => {\r\n        setmodalmessage(message)\r\n        showmodal(true)\r\n    }\r\n    return [modal,showmodal, hidemodal, modalmessage, setmodalmessage, showmodalwithmessage]\r\n}","import axios from \"axios\";\r\n// 'https://weather-app-97.herokuapp.com/'\r\n// 'http://localhost:5000'\r\nexport const axiosinstance = axios.create({\r\n    baseURL:'https://weather-app-97.herokuapp.com'\r\n})","\r\nexport const convertkelvintocelcius = (temp) => {\r\n    return parseFloat(temp - 273.15).toFixed(2)\r\n}\r\n\r\nexport const properformattedtime = (time) => {\r\n    const formattedtime = time.split(\":\")\r\n    const amapm = formattedtime[0] >= 12 ? \"p.m.\" :\"a.m.\"\r\n    let hours = formattedtime[0] % 12\r\n    hours = hours ? hours.length > 1 ? hours:`0${hours}` :12    \r\n    let minutes = formattedtime[1].length > 1 ? formattedtime[1]:`0${formattedtime[1]}`\r\n    let seconds = formattedtime[2].length > 1 ? formattedtime[2] : `0${formattedtime[2]}`\r\n    return `${hours}:${minutes}:${seconds} ${amapm}`\r\n}","import { MapContainer, TileLayer, Marker, Tooltip } from 'react-leaflet'\r\nimport React, { useState, useMemo, useEffect, useRef } from 'react';\r\nimport L from 'leaflet'\r\nimport './index.css'\r\nimport { Alert } from 'react-bootstrap';\r\nimport { ErrorModal } from '../Error Modal'\r\nimport { useModal } from '../../Hooks'\r\nimport { axiosinstance } from '../../config'\r\nimport { convertkelvintocelcius, properformattedtime } from '../../utils'\r\n\r\nfunction DisplayMap({ map, coordinates }) {\r\n\r\n    useEffect(() => {\r\n        const { lat, lng } = map.getCenter()\r\n        const [Latitude, Longtitude] = coordinates\r\n\r\n        if (lat !== Latitude || lng !== Longtitude) {\r\n            const newmapLatLng = new L.LatLng(Latitude, Longtitude)\r\n            map.flyTo(newmapLatLng, map.getZoom())\r\n        }\r\n    }, [map, coordinates])\r\n\r\n    return (\r\n        <>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const WeatherMap = ({ coordinates, weatherdata, saveweatherdata }) => {\r\n    const [map, setMap] = useState(null)\r\n    const [modal, , hidemodal, message, , showmodalwithmessage] = useModal()\r\n\r\n    const markerref = useRef()\r\n    const tooltipref = useRef()\r\n    const props = { map, coordinates }\r\n    const modalprops = { modal, hidemodal, message }\r\n\r\n\r\n    useEffect(() => {\r\n        if (map !== null && tooltipref.current !== undefined && tooltipref.current !== null) {\r\n            tooltipref.current._container.style.backgroundColor = \"#fff3cd\"\r\n            tooltipref.current._container.style.border = \"none\"\r\n        }\r\n    }, [map])\r\n\r\n    const displaymap = useMemo(\r\n\r\n        () => (\r\n            <>\r\n                {Object.keys(weatherdata).length > 0 &&\r\n                    <MapContainer\r\n                        center={coordinates}\r\n                        style={{ height: \"100vh\" }}\r\n                        zoom={10}\r\n                        scrollWheelZoom={true}\r\n                        whenCreated={setMap}>\r\n                        <TileLayer\r\n                            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                        />\r\n\r\n\r\n                        <Marker ref={markerref} position={coordinates} >\r\n                            <Tooltip ref={tooltipref} offset={[-15, -15]} direction=\"top\" opacity={1} permanent>\r\n\r\n\r\n                                <Alert className=\"bordernone\" variant=\"warning\">\r\n                                    <h3 className=\"text-center\">{weatherdata.name} </h3>\r\n                                    <div className=\"weathergrid\">\r\n                                        <div>\r\n                                            <img src={`https://openweathermap.org/img/wn/${weatherdata.icon}.png`} alt={weatherdata.description} />\r\n                                            <p >{weatherdata.description}</p>\r\n                                            <p>{weatherdata.temperature}°C</p>\r\n                                        </div>\r\n\r\n                                        <div className=\"weatherdatagrid\">\r\n\r\n                                            <div>\r\n                                                <p>Minimum Temperature:{weatherdata.minimum_temperature}°C </p>\r\n                                                <p>Maximum Temperature:{weatherdata.maximum_temperature}°C </p>\r\n                                            </div>\r\n                                            <div>\r\n                                                <p>Sunrise: {weatherdata.sunrisetime}</p>\r\n                                                <p>Sunset: {weatherdata.sunsettime}</p>\r\n                                            </div>\r\n                                            <div>\r\n                                                <p>Wind Speed: {weatherdata.speed}m/s</p>\r\n                                                <p>Humidity: {weatherdata.humidity}%</p>\r\n                                            </div>\r\n                                        </div>\r\n        \r\n                                    </div>\r\n\r\n                                </Alert>\r\n                            </Tooltip>\r\n                        </Marker>\r\n\r\n\r\n                    </MapContainer>\r\n                }\r\n\r\n            </>\r\n\r\n        ),\r\n        [coordinates, weatherdata]\r\n    )\r\n\r\n    const findcurrentuserlocation = () => {\r\n        navigator.permissions.query({ name: 'geolocation' })\r\n            .then(\r\n                ({ state }) => {\r\n                    if (state === \"denied\") {\r\n                        showmodalwithmessage(\"You have block location access. Please allow location access in the browser.\")\r\n                    }\r\n\r\n\r\n\r\n                }\r\n            ).catch(() => {\r\n                showmodalwithmessage(\"Sorry your current browser does not support location-tracking feature\")\r\n\r\n            })\r\n        if (map !== undefined && map !== null) {\r\n            try {\r\n                map.locate()\r\n                map.on('locationfound', (e) => {\r\n\r\n                    const { lat, lng } = e.latlng\r\n\r\n                    axiosinstance.post(\"/getlocatondatabylatlng\", { lat, lng }).then(({ data }) => {\r\n                        const { name, weather: [{ icon, description }], wind: { speed }, main: { temp, temp_min, temp_max, humidity }, sunrisetime, sunsettime } = data\r\n                        map.flyTo(e.latlng, map.getZoom())\r\n                        markerref.current.setLatLng(e.latlng)\r\n                        saveweatherdata({ name, icon, sunrisetime: properformattedtime(sunrisetime), sunsettime: properformattedtime(sunsettime), description, speed, temperature: convertkelvintocelcius(temp), minimum_temperature: convertkelvintocelcius(temp_min), maximum_temperature: convertkelvintocelcius(temp_max), humidity })\r\n                    }).catch(() => {\r\n                        showmodalwithmessage(\"Sorry location data for your location could not be found\")\r\n                    })\r\n                })\r\n\r\n            }\r\n            catch (error) {\r\n\r\n                showmodalwithmessage(\"Sorry something went wrong while trying to fetch your location\")\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div onClick={findcurrentuserlocation} className=\"text-info d-flex justify-content-end smalltext\">\r\n                Allow location access\r\n            </div>\r\n            {\r\n                map ? <DisplayMap {...props} /> : null\r\n            }\r\n            {displaymap}\r\n\r\n            <ErrorModal {...modalprops} />\r\n\r\n        </>\r\n    )\r\n}","import React, { useState, useEffect, useCallback } from 'react';\nimport { WeatherMap, ErrorModal } from './Components'\nimport SearchIcon from '@mui/icons-material/Search';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport TextField from '@mui/material/TextField';\nimport IconButton from '@mui/material/IconButton';\nimport { axiosinstance } from './config'\nimport { convertkelvintocelcius, properformattedtime } from './utils'\nimport { useModal } from './Hooks'\nimport LinkedInIcon from '@mui/icons-material/LinkedIn';\nimport TwitterIcon from '@mui/icons-material/Twitter';\nimport { Alert } from 'react-bootstrap';\n\nfunction App() {\n  const [weatherlocation, changeweatherlocation] = useState(\"\")\n  const [modal, showmodal, hidemodal] = useModal()\n  const [weatherdata, saveweatherdata] = useState({})\n  const [coordinates, changecoordinates] = useState([23.2667, 77.4])\n\n  const MakeApiRequest = useCallback((currentweatherlocation = \"Bhopal\") => {\n    axiosinstance.post(`/getlocatondata/${currentweatherlocation}`).then(({ data }) => {\n      const { coord: { lat, lon }, weather: [{ icon, description }], wind: { speed }, main: { temp, temp_min, temp_max, humidity }, sunrisetime, sunsettime } = data\n\n      saveweatherdata({ name: currentweatherlocation, icon, sunrisetime: properformattedtime(sunrisetime), sunsettime: properformattedtime(sunsettime), description, speed, temperature: convertkelvintocelcius(temp), minimum_temperature: convertkelvintocelcius(temp_min), maximum_temperature: convertkelvintocelcius(temp_max), humidity })\n      changecoordinates([lat, lon])\n    }).catch(() => {\n      showmodal(true)\n    })\n  }, [showmodal])\n\n  const findweatherforalocation = () => {\n    const currentweatherlocation = weatherlocation.trim()\n    if (currentweatherlocation.length === 0) {\n      showmodal(true)\n      return\n    }\n    MakeApiRequest(currentweatherlocation)\n  }\n\n  useEffect(() => {\n    if (Object.keys(weatherdata).length === 0) {\n      MakeApiRequest()\n    }\n  }, [weatherdata, MakeApiRequest])\n\n  const mapprops = {\n    weatherdata, coordinates, saveweatherdata\n  }\n\n  const props = { modal, hidemodal, message: `${weatherlocation.trim() === \"\" ? \"Input field cannot be empty\" : \"Sorry weather data for your location could not be found\"}` }\n  return (\n    <div >\n      <div className=\"d-flex justify-content-center mt-5 mb-3\">\n        <div className=\"d-flex flex-column\">\n          <div className=\"d-flex justify-content-center mb-3\">\n            <strong>Enter  location:</strong>\n          </div>\n          <div className=\"d-flex justify-content-center \">\n            <TextField\n              size=\"small\"\n              value={weatherlocation}\n              onKeyPress={(e) => {\n\n                if (e.key === 'Enter') {\n                  findweatherforalocation()\n                }\n              }}\n\n              onChange={(e) => changeweatherlocation(e.target.value)}\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position=\"end\">\n                    <IconButton onClick={findweatherforalocation}>\n                      <SearchIcon />\n                    </IconButton>\n                  </InputAdornment>\n                )\n              }}\n            />\n          </div>\n\n        </div>\n\n      </div>\n\n\n      <div >\n        <WeatherMap {...mapprops} />\n      </div>\n      <div className=\"mt-3 d-flex justify-content-center\">\n        <Alert variant=\"info\">\n          <div>\n            <h5><p>Contact developer</p></h5>\n            <div className=\"d-flex justify-content-center\">\n              <a rel=\"noreferrer\" href=\"https://twitter.com/ashwin_nema\" target=\"_blank\"><TwitterIcon color=\"primary\" ></TwitterIcon>  </a>\n              <a rel=\"noreferrer\" href=\"https://www.linkedin.com/in/ashwin-nema-4223671a5/\" target=\"_blank\"><LinkedInIcon color=\"primary\" ></LinkedInIcon>  </a>\n            </div>\n          </div>\n        </Alert>\n\n      </div>\n      <ErrorModal {...props} />\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}